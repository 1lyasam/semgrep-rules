rules:
- id: spring-sqli
  languages:
  - java
  message: Detected a string argument from a public method contract in a raw SQL statement.
    This could lead to SQL injection if variables in the SQL statement are not properly
    sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You
    can obtain a PreparedStatement using 'connection.prepareStatement'.
  metadata:
    category: security
    cwe: "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
    technology:
    - spring
  mode: taint
  pattern-sanitizers:
  - not_conflicting: true
    patterns:
    - pattern: $A
    - pattern-inside: |
        new $TYPE(...,$A,...);
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: $A
        - pattern-inside: |
            new PreparedStatementCreatorFactory($A,...);
      - patterns:
        - pattern: $A
        - pattern-inside: |
            (JdbcTemplate $T).$M($A,...)
      - patterns:
        - pattern: (String $A)
        - pattern-inside: |
            (JdbcTemplate $T).batchUpdate(...)
      - patterns:
        - pattern: $A
        - pattern-inside: |
            NamedParameterBatchUpdateUtils.$M($A,...)
      - patterns:
        - pattern: $A
        - pattern-inside: |
            BatchUpdateUtils.$M($A,...)
  pattern-sources:
  - patterns:
    - pattern: $ARG
    - pattern-inside: |
        public $T $M (..., String $ARG,...){...}
  severity: WARNING
